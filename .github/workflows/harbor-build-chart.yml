name: 1. Build Harbor Chart

on:
  push:
    branches: [main, master]
    paths:
      - 'harbor-automated/cmd/**'
      - 'harbor-automated/modifications/**'
      - 'harbor-automated/examples/**'
      - 'harbor-automated/go.mod'
      - 'harbor-automated/go.sum'
      - 'harbor-automated/Makefile'
      - '.github/workflows/1-build-chart.yml'
  pull_request:
    paths:
      - 'harbor-automated/cmd/**'
      - 'harbor-automated/modifications/**'
  workflow_dispatch:
    inputs:
      harbor_version:
        description: 'Harbor version to build'
        required: false
        default: '1.18.0'

env:
  HARBOR_VERSION: ${{ github.event.inputs.harbor_version || '1.18.0' }}
  RELIZA_ITERATION: '1'

jobs:
  build-and-commit:
    name: Build Chart and Commit
    runs-on: ubuntu-latest
    
    # Only commit on main branch, not PRs, and not if triggered by bot
    if: |
      github.event_name != 'pull_request' &&
      github.actor != 'github-actions[bot]' &&
      !contains(github.event.head_commit.message, 'chore: build Harbor chart')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
      
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25.3'
          cache-dependency-path: harbor-automated/go.sum
      
      - name: Setup Helm
        uses: azure/setup-helm@v4
        with:
          version: 'v3.16.2'
      
      - name: Add Harbor Helm repo
        run: helm repo add harbor https://helm.goharbor.io
      
      - name: Build harbor-modifier tool
        working-directory: harbor-automated
        run: |
          echo "Building Go tool..."
          go build -v -o bin/harbor-modifier ./cmd/harbor-modifier
      
      - name: Generate chart
        working-directory: harbor-automated
        run: |
          echo "Generating Harbor chart..."
          ./bin/harbor-modifier -version=${{ env.HARBOR_VERSION }}
      
      - name: Validate chart
        working-directory: harbor-automated
        run: |
          echo "Running helm lint..."
          helm lint harbor-helm
          
          echo "Testing template rendering..."
          helm template test harbor-helm \
            --set expose.type=clusterIP \
            --set expose.tls.auto.commonName=harbor.local > /dev/null
          
          echo "Verifying modifications applied..."
          grep -q "Reliza customization" harbor-helm/templates/_helpers.tpl
          grep -q "relizapostgresql" harbor-helm/values.yaml
      
      - name: Update chart version
        working-directory: harbor-automated
        run: |
          VERSION="${{ env.HARBOR_VERSION }}-reliza.${{ env.RELIZA_ITERATION }}"
          echo "Setting chart version to: $VERSION"
          sed -i "s/^version:.*/version: $VERSION/" harbor-helm/Chart.yaml
          
          # Add build metadata
          echo "# Built by CI on $(date -u +%Y-%m-%dT%H:%M:%SZ)" >> harbor-helm/Chart.yaml
          echo "# Source commit: ${{ github.sha }}" >> harbor-helm/Chart.yaml
          
          # Verify
          grep "^version:" harbor-helm/Chart.yaml
      
      - name: Check if chart changed
        id: check_changes
        working-directory: harbor-automated
        run: |
          # Check if harbor-helm directory has changes
          if git diff --quiet harbor-helm/ 2>/dev/null; then
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "No changes detected in generated chart"
          else
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "Changes detected in generated chart"
          fi
      
      - name: Commit generated chart
        if: steps.check_changes.outputs.changed == 'true'
        working-directory: harbor-automated
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          
          # Add the generated chart
          git add harbor-helm/
          
          # Create commit
          git commit -m "chore: build Harbor chart ${{ env.HARBOR_VERSION }}-reliza.${{ env.RELIZA_ITERATION }}

          Generated from commit: ${{ github.sha }}
          Harbor version: ${{ env.HARBOR_VERSION }}"
          
          # Push
          git push origin ${{ github.ref_name }}
      
      - name: Create summary
        run: |
          echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Harbor Version:** ${{ env.HARBOR_VERSION }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Chart Version:** ${{ env.HARBOR_VERSION }}-reliza.${{ env.RELIZA_ITERATION }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Chart Changed:** ${{ steps.check_changes.outputs.changed }}" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ steps.check_changes.outputs.changed }}" == "true" ]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "✅ Chart built and committed to repository" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Next: Stage 2 CI will publish this chart to registry" >> $GITHUB_STEP_SUMMARY
          else
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "ℹ️ No changes in generated chart, skipped commit" >> $GITHUB_STEP_SUMMARY
          fi
